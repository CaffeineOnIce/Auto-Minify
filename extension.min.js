const vscode=require("vscode"),{minify:minify}=require("terser"),minifyCSS=require("clean-css"),minifyHTML=require("html-minifier").minify,fs=require("fs"),path=require("path");let onlyParent="",changeRootName=!1,enableHtmlMinification=!0,enableCssMinification=!0,enableJsMinification=!0,enableMinFileHtml=!0,enableMinFileCss=!0,enableMinFileJs=!0,enableSourceMaps=!1,enableSeparateFolderHtml=!1,enableSeparateFolderCss=!1,enableSeparateFolderJs=!1;function activate(context){updateSettings(),vscode.workspace.onDidSaveTextDocument((async document=>{const{languageId:languageId,fileName:fileName}=document;var parentPath=path.parse(fileName).dir;const inputFile=document.getText();if(onlyParent.length>0&&0===onlyParent.split(",").filter((f=>parentPath.includes(f))).length)return;if(onlyParent.length>0&&!0===changeRootName){var root=onlyParent.split(",").filter((f=>parentPath.includes(f)))[0];if(root){var rootPath=parentPath.replace(new RegExp(root+"(.*$)","gi"),root),rootMin=path.join(rootPath+"\\min"),structure=parentPath.replace(rootPath,"").replace(/^\\/,"");parentPath=path.join(rootPath+"\\min\\"+structure),fs.existsSync(rootMin)||fs.mkdirSync(rootMin),structure.split("\\").forEach((s=>{rootMin=path.join(rootMin+"\\"+s),fs.existsSync(rootMin)||fs.mkdirSync(rootMin)}))}}if(!shouldMinify(languageId))return;if(isMinFile(fileName)&&!shouldMinifyMinFiles(languageId))return;let outputFile,sourceMapFile;switch(languageId){case"html":outputFile=getOutputFilePath(parentPath,fileName,".html",enableSeparateFolderHtml);let minifiedHTML=minifyHTML(inputFile,{caseSensitive:!0,collapseWhitespace:!0,collapseInlineTagWhitespace:!0,continueOnParseError:!0,removeComments:!0,removeAttributeQuotes:!0,removeRedundantAttributes:!0,minifyCSS:!0,minifyJS:!0});await writeFile(outputFile,minifiedHTML),console.clear(),vscode.window.setStatusBarMessage("HTML Minified",2e3);break;case"css":outputFile=getOutputFilePath(parentPath,fileName,".css",enableSeparateFolderCss);let minifiedCSS=new minifyCSS({level:{1:{all:!0}}}).minify(inputFile);await writeFile(outputFile,minifiedCSS.styles),console.clear(),vscode.window.setStatusBarMessage("CSS Minified",2e3);break;case"javascript":outputFile=getOutputFilePath(parentPath,fileName,".js",enableSeparateFolderJs),sourceMapFile=`${outputFile}.map`;let options={mangle:!1,sourceMap:!!enableSourceMaps&&{url:path.basename(sourceMapFile)}},minifiedJS=await minify(inputFile,options);await writeFile(outputFile,minifiedJS.code),enableSourceMaps&&await writeFile(sourceMapFile,minifiedJS.map),console.clear(),vscode.window.setStatusBarMessage("JS Minified",2e3)}})),context.subscriptions.push(vscode.commands.registerCommand("autominify.minify",(()=>{}))),context.subscriptions.push(vscode.workspace.onDidChangeConfiguration((event=>{(event.affectsConfiguration("autominify.rootPathName")||event.affectsConfiguration("autominify.changeRootName")||event.affectsConfiguration("autominify.enableHtmlMinification")||event.affectsConfiguration("autominify.enableCssMinification")||event.affectsConfiguration("autominify.enableJsMinification")||event.affectsConfiguration("autominify.enableMinFileHtml")||event.affectsConfiguration("autominify.enableMinFileCss")||event.affectsConfiguration("autominify.enableMinFileJs")||event.affectsConfiguration("autominify.enableSourceMaps")||event.affectsConfiguration("autominify.enableSeparateFolderHtml")||event.affectsConfiguration("autominify.enableSeparateFolderCss")||event.affectsConfiguration("autominify.enableSeparateFolderJs"))&&updateSettings()})))}function deactivate(){}function updateSettings(){const config=vscode.workspace.getConfiguration("autominify");onlyParent=config.get("rootPathName",""),changeRootName=config.get("changeRootName",!1),enableHtmlMinification=config.get("enableHtmlMinification",!0),enableCssMinification=config.get("enableCssMinification",!0),enableJsMinification=config.get("enableJsMinification",!0),enableMinFileHtml=config.get("enableMinFileHtml",!0),enableMinFileCss=config.get("enableMinFileCss",!0),enableMinFileJs=config.get("enableMinFileJs",!0),enableSourceMaps=config.get("enableSourceMaps",!1),enableSeparateFolderHtml=config.get("enableSeparateFolderHtml",!1),enableSeparateFolderCss=config.get("enableSeparateFolderCss",!1),enableSeparateFolderJs=config.get("enableSeparateFolderJs",!1)}function shouldMinify(languageId){switch(languageId){case"html":return enableHtmlMinification;case"css":return enableCssMinification;case"javascript":return enableJsMinification;default:return!1}}function shouldMinifyMinFiles(languageId){switch(languageId){case"html":return enableMinFileHtml;case"css":return enableMinFileCss;case"javascript":return enableMinFileJs;default:return!1}}function isMinFile(fileName){return path.parse(fileName).name.toLowerCase().includes("min")}async function writeFile(outputPath,content){return new Promise(((resolve,reject)=>{fs.writeFile(outputPath,content,{flag:"w"},(err=>{err?reject(err):resolve()}))}))}function getOutputFilePath(parentPath,fileName,extension,enableSeparateFolder){const outputPathWithoutExtension=path.join(parentPath,`${path.parse(fileName).name}`+(changeRootName?"":".min"));if(console.log(outputPathWithoutExtension),enableSeparateFolder){const minFolder=path.join(parentPath,"min");return fs.existsSync(minFolder)||fs.mkdirSync(minFolder),path.join(minFolder,`${path.parse(fileName).name}`+(changeRootName?"":".min")+`${extension}`)}return`${outputPathWithoutExtension}${extension}`}module.exports={activate:activate,deactivate:deactivate};